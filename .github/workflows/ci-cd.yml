name: CI/CD Pipeline

on:
  push:
    branches:
      - '**'

jobs:
  test-lint:
    name: Tests & Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run lint
        run: flake8 .

      - name: Run tests with coverage
        run: |
          pytest --cov=. --cov-report=term-missing --cov-fail-under=80

  build-push-docker:
    name: Build & Push Docker image
    runs-on: ubuntu-latest
    needs: test-lint
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build and tag Docker image
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/oc-lettings-site
          GIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          docker build -t $IMAGE_NAME:latest -t $IMAGE_NAME:$GIT_SHA .

      - name: Push Docker image to Docker Hub
        run: |
          IMAGE_NAME=${{ secrets.DOCKER_USERNAME }}/oc-lettings-site
          GIT_SHA=$(echo $GITHUB_SHA | cut -c1-7)
          docker push $IMAGE_NAME:$GIT_SHA
          docker push $IMAGE_NAME:latest

  deploy-to-render:
    name: Deploy to Render
    needs: build-push-docker
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master'

    steps:
      - name: Deploy to Render
        run: |
          curl -X POST \
            -H "Authorization: Bearer ${{ secrets.RENDER_API_KEY }}" \
            -H "Content-Type: application/json" \
            --data '{}' \
            https://api.render.com/v1/services/${{ secrets.RENDER_SERVICE_ID }}/deploys
